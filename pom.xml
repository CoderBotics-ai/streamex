<!--
  ~ Copyright 2015, 2024 StreamEx contributors
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>one.util</groupId>
  <artifactId>streamex</artifactId>
  <version>0.8.3</version> <!-- Consider updating version for Java 21 release -->
  <packaging>jar</packaging>

  <name>StreamEx</name>
  <description>Enhancing Java 8 Streams</description>
  <url>https://github.com/amaembo/streamex</url>
  <inceptionYear>2015</inceptionYear>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.package>one.util.streamex</project.package>
    <project.package.path>one/util/streamex</project.package.path>
    <project.github.repository>amaembo/streamex</project.github.repository>
    <repository.url>git@github.com:${project.github.repository}.git</repository.url>
    <nexus.url>https://oss.sonatype.org</nexus.url>
    <license.url>https://www.apache.org/licenses/LICENSE-2.0</license.url>
    <!-- Updated Java version properties for Java 21 -->
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <!-- Define Jacoco version property for consistency -->
    <jacoco.version>0.8.12</jacoco.version>
  </properties>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>${license.url}</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>${nexus.url}/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>${nexus.url}/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version> <!-- Consider upgrading to JUnit 5 -->
      <scope>test</scope>
    </dependency>
  </dependencies>

  <developers>
    <developer>
      <name>Tagir Valeev</name>
      <email>amaembo@gmail.com</email>
    </developer>
  </developers>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <!-- Updated plugin version -->
        <version>3.4.1</version>
        <executions>
          <execution>
            <id>enforce-java</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <!-- Updated required Java version to 21 -->
                  <version>21</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <!-- Updated plugin version -->
        <version>3.6.0</version>
        <executions>
          <execution>
            <phase>test</phase> <!-- Consider moving to generate-sources or initialize phase -->
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <!-- Necessary to add sources to the source-jar -->
              <sources>
                <source>src/main/java-mr/9</source>
                <source>src/main/java-mr/16</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <!-- Updated plugin version for better Java 21 support -->
        <version>3.13.0</version>
        <configuration>
          <!-- javadoc plugin uses this to detect JDK URL -->
          <source>${maven.compiler.source}</source>
          <!-- Updated base release level to 21 -->
          <release>21</release>
          <compilerArgs>
            <arg>-Xlint:all</arg>
          </compilerArgs>
        </configuration>
        <executions>
          <!-- Multi-release compilation for Java 9 specific classes -->
          <execution>
            <id>java9</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <release>9</release>
              <multiReleaseOutput>true</multiReleaseOutput>
              <compileSourceRoots>
                <compileSourceRoot>${project.basedir}/src/main/java-mr/9</compileSourceRoot>
              </compileSourceRoots>
            </configuration>
          </execution>
          <!-- Multi-release compilation for Java 16 specific classes -->
          <execution>
            <id>java16</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <release>16</release>
              <multiReleaseOutput>true</multiReleaseOutput>
              <compileSourceRoots>
                <compileSourceRoot>${project.basedir}/src/main/java-mr/16</compileSourceRoot>
              </compileSourceRoots>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <!-- Updated plugin version for better Java 21 support -->
        <version>3.6.3</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <!-- Updated source level for Javadoc generation -->
              <source>21</source>
              <sourcepath>${project.build.sourceDirectory};${project.basedir}/src/main/java-mr/9;${project.basedir}/src/main/java-mr/16</sourcepath>
              <excludePackageNames>java.util.stream</excludePackageNames>
              <additionalOptions>-Xdoclint:all</additionalOptions>
              <noqualifier>all</noqualifier>
              <verbose>true</verbose>
              <!--quiet>true</quiet-->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version> <!-- Keep version or update if needed, 3.1.0 is latest -->
        <dependencies>
          <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.ant</artifactId>
            <classifier>nodeps</classifier>
            <!-- Updated Jacoco version to match jacoco-maven-plugin -->
            <version>${jacoco.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>jacoco-report</id>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <typedef resource="org/jacoco/ant/antlib.xml"/>
                <report>
                  <executiondata>
                    <fileset dir="target" includes="jacoco.exec"/>
                  </executiondata>
                  <structure name="${project.name}">
                    <group name="src/main/java">
                      <classfiles>
                        <fileset dir="${basedir}/target/classes">
                          <exclude name="META-INF/versions/**"/>
                        </fileset>
                      </classfiles>
                      <sourcefiles>
                        <fileset dir="${basedir}/src/main/java"/>
                      </sourcefiles>
                    </group>
                    <group name="src/main/java-mr/9">
                      <classfiles>
                        <fileset dir="${basedir}/target/classes/META-INF/versions/9"/>
                      </classfiles>
                      <sourcefiles>
                        <fileset dir="${basedir}/src/main/java-mr/9"/>
                      </sourcefiles>
                    </group>
                    <group name="src/main/java-mr/16">
                      <classfiles>
                        <fileset dir="${basedir}/target/classes/META-INF/versions/16"/>
                      </classfiles>
                      <sourcefiles>
                        <fileset dir="${basedir}/src/main/java-mr/16"/>
                      </sourcefiles>
                    </group>
                  </structure>
                  <html destdir="${basedir}/target/jacoco"/>
                  <xml destfile="${basedir}/target/jacoco/jacoco.xml"/>
                  <check>
                    <rule element="BUNDLE">
                      <limit counter="COMPLEXITY" value="COVEREDRATIO" minimum="0.95"/>
                    </rule>
                  </check>
                </report>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <!-- Updated plugin version -->
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <!-- Updated plugin version -->
        <version>3.4.1</version>
        <configuration>
          <archive>
            <manifestEntries>
              <Bundle-Name>${project.name}</Bundle-Name>
              <Bundle-Description>${project.description}</Bundle-Description>
              <Bundle-License>${license.url}</Bundle-License>
              <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
              <Bundle-SymbolicName>${project.package}</Bundle-SymbolicName>
              <Bundle-Version>${project.version}</Bundle-Version>
              <Export-Package>${project.package};version="${project.version}"</Export-Package>
              <Multi-Release>true</Multi-Release>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <!-- Updated plugin version -->
        <version>1.7.0</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>${nexus.url}</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <!-- Updated plugin version -->
        <version>3.2.4</version>
        <configuration>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <!-- Updated plugin version for better Java 21 support -->
        <version>3.2.5</version>
        <configuration>
          <useModulePath>false</useModulePath>
          <!-- Ensure tests run on Java 21 by default unless overridden -->
        </configuration>
        <executions>
          <!-- Test execution using Java 16 specific classes -->
          <execution>
            <id>java16-test</id>
            <configuration>
              <classesDirectory>${basedir}/target/classes/META-INF/versions/16</classesDirectory>
              <additionalClasspathElements>${project.build.outputDirectory}</additionalClasspathElements>
              <!-- Potentially force JVM if needed: <jvm>${env.JAVA_HOME_16}/bin/java</jvm> -->
            </configuration>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
          <!-- Test execution using Java 9 specific classes -->
          <execution>
            <id>java9-test</id>
            <configuration>
              <classesDirectory>${basedir}/target/classes/META-INF/versions/9</classesDirectory>
              <additionalClasspathElements>${project.build.outputDirectory}</additionalClasspathElements>
              <!-- Potentially force JVM if needed: <jvm>${env.JAVA_HOME_9}/bin/java</jvm> -->
            </configuration>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
          <!-- Default test execution (now implicitly Java 21 base + MR JAR structure) -->
          <execution>
            <id>default-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <!-- No specific classesDirectory needed, Surefire handles MR JARs -->
            <!-- Ensure the JVM running Maven/Surefire is Java 21+ -->
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <!-- Updated Jacoco version -->
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>4.3.0</version> <!-- Keep version or update if needed -->
        <dependencies>
          <!-- JAXB dependency might not be needed with newer JDKs/plugins, remove if build succeeds without it -->
          <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version> <!-- Updated JAXB API version -->
          </dependency>
        </dependencies>
        <configuration>
             <!-- Ensure the path to the jacoco report is correct -->
             <jacocoReports>
                 <jacocoReport>${basedir}/target/site/jacoco/jacoco.xml</jacocoReport>
             </jacocoReports>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jreleaser</groupId>
        <artifactId>jreleaser-maven-plugin</artifactId>
        <!-- Updated plugin version -->
        <version>1.12.0</version>
        <configuration>
          <jreleaser>
            <project>
              <license>Apache-2.0</license> <!-- SPDX identifier -->
            </project>
            <release>
              <github>
                <tagName>streamex-{{projectVersion}}</tagName>
                <branch>master</branch> <!-- Consider updating to 'main' if that's your default branch -->
                <changelog>
                  <formatted>ALWAYS</formatted>
                  <format>- {{commitShortHash}} {{commitTitle}}</format>
                  <contributors>
                    <format>- {{contributorName}}{{#contributorUsernameAsLink}} ({{.}}){{/contributorUsernameAsLink}}</format>
                  </contributors>
                  <hide>
                    <contributors>GitHub</contributors>
                  </hide>
                </changelog>
              </github>
            </release>
            <files>
              <artifacts>
                <artifact>
                  <path>${project.build.directory}/${project.artifactId}-${project.version}.jar</path>
                </artifact>
                <artifact>
                  <path>${project.build.directory}/${project.artifactId}-${project.version}-sources.jar</path>
                </artifact>
                <artifact>
                  <path>${project.build.directory}/${project.artifactId}-${project.version}-javadoc.jar</path>
                </artifact>
              </artifacts>
            </files>
          </jreleaser>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <scm>
    <connection>scm:git:${repository.url}</connection>
    <developerConnection>scm:git:${repository.url}</developerConnection>
    <url>${repository.url}</url>
  </scm>

  <profiles>
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <configuration>
              <skip>false</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
