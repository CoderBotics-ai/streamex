name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
      passphrase:
        description: "GPG passphrase"
        required: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        # Updated action version for general improvements and compatibility
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Updated Java version to 21 as requested
      - name: Set up JDK 21
        # Updated action version for general improvements and compatibility
        uses: actions/setup-java@v4
        with:
          # Changed Java version from 17 to 21
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          # Explicitly specify Maven version for Java 21 compatibility (check for latest compatible version)
          maven-version: '3.9.6' # Replace with the latest compatible version

      - name: Cache Maven
        # Updated action version for general improvements and compatibility
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set version
        run: |
          VERSION=${{ github.event.inputs.version }}
          echo "Releasing $VERSION"
          mvn -B versions:set -DnewVersion=$VERSION -DgenerateBackupPoms=false -f pom.xml
          mvn -B versions:set -DnewVersion=$VERSION -DgenerateBackupPoms=false -f benchmark/pom.xml

      - name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.GPG_PRIVATE_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Build
        run: |
          export GPG_TTY=$(tty)
          # Ensure Maven uses the correct Java version set up earlier
          mvn --no-transfer-progress -B --file pom.xml verify -Dgpg.passphrase=${{ github.event.inputs.passphrase }}

      - name: Commit version
        run: |
          VERSION=${{ github.event.inputs.version }} # Ensure VERSION is available in this step too
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "Releasing version $VERSION"
          git push origin

      - name: Release to Maven Central
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
        run: |
          export GPG_TTY=$(tty)
          # Ensure Maven uses the correct Java version set up earlier
          mvn --no-transfer-progress -B --file pom.xml \
            -Drepository.url=https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git \
            -Dgpg.passphrase=${{ github.event.inputs.passphrase }} \
            deploy

      - name: Release to GitHub
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Ensure Maven uses the correct Java version set up earlier
          mvn -B --file pom.xml jreleaser:release

      - name: JReleaser output
        if: always()
        # Updated action version for general improvements and compatibility
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-logs
          path: |
            target/jreleaser/trace.log
            target/jreleaser/output.properties